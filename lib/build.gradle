/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
       url "https://maven.google.com"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
// https://mvnrepository.com/artifact/com.google.cloud/google-cloud-video-intelligence
implementation group: 'com.google.cloud', name: 'google-cloud-video-intelligence', version: '2.11.0'


// https://mvnrepository.com/artifact/com.google.api-client/google-api-client
implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.31.1'

// https://mvnrepository.com/artifact/com.google.auth/google-auth-library-oauth2-http
implementation group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.23.0'

// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.18.1'



// https://mvnrepository.com/artifact/commons-io/commons-io
implementation group: 'commons-io', name: 'commons-io', version: '2.4'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.auth0:java-jwt:4.4.0'
        implementation "org.springframework.boot:spring-boot-starter-security"
    
    runtimeOnly 'org.postgresql:postgresql'
	
}

test {
    useJUnitPlatform()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
